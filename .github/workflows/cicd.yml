name: CI/CD Pipeline with UAT and Production (Blue-Green)

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy_color:
        description: 'Deploy to which color? (green/blue)'
        required: true
        default: 'green'

env:
  AZURE_CONTAINER_REGISTRY: "inlogik.azurecr.io"
  IMAGE_NAME: "aspnetapp"
  CLUSTER_NAME: "chen-aks"
  RESOURCE_GROUP: "inlogik"
  IMAGE_TAG_UAT: "uat-${{ github.sha }}"
  IMAGE_TAG_GREEN: "green-${{ github.sha }}"
  IMAGE_TAG_BLUE: "blue-${{ github.sha }}" # Dynamic tag for blue

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Pull and Tag Image for UAT
        run: |
          docker pull mcr.microsoft.com/dotnet/samples:aspnetapp
          docker tag mcr.microsoft.com/dotnet/samples:aspnetapp ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_UAT }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_UAT }}
      - name: Pull and Tag Image for Production
        run: |
          IMAGE_TAG=${{ github.event.inputs.deploy_color == 'green' && env.IMAGE_TAG_GREEN || env.IMAGE_TAG_BLUE }}
          docker pull mcr.microsoft.com/dotnet/samples:aspnetapp
          docker tag mcr.microsoft.com/dotnet/samples:aspnetapp ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG

  deploy-to-uat:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG_UAT: ${{github.sha}} # Setting the tag to the commit SHA
    steps:
      - uses: actions/checkout@v2
      - name: Azure Login
        uses: azure/login@v1
        with: 
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
     
      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: "v0.0.25"
          
      - name: Install Kubectl
        uses: azure/setup-kubectl@v1
      
      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get AKS context
        uses: azure/aks-set-context@v3
        with: 
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: "false"
          use-kubelogin: "true"

      - name: Update Kubernetes Manifest for UAT
        run: |
          sed -i 's|IMAGE_PLACEHOLDER|${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_UAT }}|g' ./manifest/uat-deployment.yaml

      - name: Deploy to UAT
        uses: Azure/k8s-deploy@v4
        with:
          namespace: uat
          action: deploy
          manifests: |
            ./manifest/uat-deployment.yaml

  deploy-to-prod:
    needs: deploy-to-uat
    runs-on: ubuntu-latest
    environment: 
      name: production
    steps:
      - uses: actions/checkout@v2
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds:'{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: "v0.0.25"
            
      - name: Install Kubectl
        uses: azure/setup-kubectl@v1
        
      - name: Get AKS context
        uses: azure/aks-set-context@v3
        with: 
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: "false"
          use-kubelogin: "true"

      - name: Update Kubernetes Manifest for Prod
        run: |
          IMAGE_TAG=${{ github.event.inputs.deploy_color == 'green' && env.IMAGE_TAG_GREEN || env.IMAGE_TAG_BLUE }}
          sed -i 's|IMAGE_PLACEHOLDER|${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG|g' ./manifest/pro-${{ github.event.inputs.deploy_color }}-deployment.yaml

      - name: Deploy to Selected Color (Prod)
        uses: Azure/k8s-deploy@v4
        with:
          namespace: prod
          action: deploy
          manifests: |
            ./manifest/prod-${{ github.event.inputs.deploy_color }}-deployment.yaml

  switch-to-color:
    needs: deploy-to-prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: azure/setup-kubectl@v1
      - name: Switch Traffic to Selected Color (Prod)
        run: |
          if [ "${{ github.event.inputs.deploy_color }}" == "green" ]; then
            kubectl patch service aspnetapp-service -n prod --type='json' -p='[{"op": "replace", "path": "/spec/selector/color", "value":"green"}]'
          else
            kubectl patch service aspnetapp-service -n prod --type='json' -p='[{"op": "replace", "path": "/spec/selector/color", "value":"blue"}]'
          fi
