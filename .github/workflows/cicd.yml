name: CI/CD Pipeline with UAT and Production

env:
  AZURE_CONTAINER_REGISTRY: "inlogik.azurecr.io"
  IMAGE_NAME: "aspnetapp"

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Pull, Tag and Push Docker image
        run: |
          docker pull mcr.microsoft.com/dotnet/samples:aspnetapp
          docker tag mcr.microsoft.com/dotnet/samples:aspnetapp ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy-to-uat:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: UAT
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Kubectl
        uses: azure/setup-kubectl@v1
      - name: Update Kubernetes Manifest for UAT
        run: |
          sed -i 's|IMAGE_PLACEHOLDER|${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|g' ./uat-deployment.yaml
      - name: Deploy to UAT
        run: |
          kubectl apply -f ./uat-deployment.yaml --namespace=uat

  uat-approval:
    needs: deploy-to-uat
    runs-on: ubuntu-latest
    environment: production
    steps:
      - run: echo "UAT Deployment complete. Awaiting approval for Production deployment."

  deploy-to-prod:
    needs: uat-approval
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Kubectl
        uses: azure/setup-kubectl@v1
      - name: Update Kubernetes Manifest for Production
        run: |
          sed -i 's|IMAGE_PLACEHOLDER|${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|g' ./prod-deployment.yaml
      - name: Deploy to Production
        run: |
          kubectl apply -f ./prod-deployment.yaml --namespace=prod
